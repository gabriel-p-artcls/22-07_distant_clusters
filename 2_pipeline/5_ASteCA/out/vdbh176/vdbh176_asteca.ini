################################################################################
#                   *** ASteCA input parameters file ***
#                      Created: [2021-12-19 13:13:02]
#
# This file contains the values of the parameters used by ASteCA functions.
# Any empty line or lines that begin with a # character will be ignored.
#
# * DO NOT modify the ID strings in the first column of each line, these are
#   used by the code to identify the parameters in that line.
# * DO NOT write less values than those required in each line or the code
#   will halt.
#
################################################################################



############################## Input data ######################################

# Columns for the IDs and (x, y) coordinates.
#
# * id_star, x/ra, y/dec: [str / int]
#   IDs and coordinates.
# * coords: [px / deg]
#   Indicates if the coordinates of the observed frame are in pixels or degrees.
# * project: [y / n]
#   If 'coords=deg' indicate whether to use a sinusoidal projection on the data.
#
#   id_star   x/ra   y/dec   coords   project
#I1    DR2Name      _x     _y    deg  n
I1    EDR3Name      _x   _y   deg   n
#I1    GaiaEDR3      _x   _y   deg   n
#I1    Source      _x   _y   deg   n
#I1   EDR3Name     RA_ICRS   DE_ICRS   deg   n
#I1    ID      _x   _y   deg   n


# Columns for the photometry, parallax, proper motions, and radial velocity.
#
# * system: [str]
#   Photometric system's id. Must match the isochrones' folder name.
# * filterX: [str]
#   Name of the filter as it appears in the isochrone files. For the color line
#   the filters 'filter1, filter2' must be ordered such that the color is
#   generated as: (filter1 - filter2).
# * mag_col, e_mag_col: [str]
#   Column names for the magnitude and its uncertainty.
# * color_col, e_color_col: [str]
#   Column names for the color and its uncertainty. One color is mandatory, and
#   up to two colors are supported for the fundamental parameters block (the
#   other blocks have no limit on the colors). If more than one color is to be
#   used, add a new line starting with the identificator 'I3'.
#
#           system    filter     mag_col      e_mag_col
I2        gaiaedr3      Gmag        Gmag         e_Gmag
#I2        ubvrijhk      Vmag        V         eV
#I2         2mass      Jmag        Jmag         e_J

#
#           system    filter1    filter2   color_col  e_color_col
I3        gaiaedr3    G_BPmag    G_RPmag       BP-RP      e_BP-RP
#I3        gaiaedr3    G_BPmag    G_RPmag       BP-RP      e_BPmag-RPmag
#I3        ubvrijhk    Bmag    Vmag        BV      eBV
#I3        ubvrijhk    Umag    Bmag        UB      eUB
#I3         2mass      Jmag    Ksmag       JK      e_JK

# * plx, pmRa, pmDE, rv: [str / n]
#   Columns for the parallax [mas], proper motions [mas/yr], and radial velocity
#   [km/s]. If a data column is not present use 'n'.
#
#    Parallax         |------ Proper motions -------|    Radial velocity
#    plx    e_plx     pmRA    e_pmRA    pmDE    e_pmDE     rv    e_rv
#I4   Plx    e_Plx     pmRA    e_pmRA    pmDE    e_pmDE     n    n
#I4     Plx_corr    e_Plx        n    n    n    n     n       n
I4     n    n        n         n       n         n      n       n
#I4     n     n      pmRA    e_pmRA    pmDE    e_pmDE     n       n
################################################################################



######################### Input data processing ################################

# * nanvals: [str]
#   List of strings indicating which entries in the data file should be treated
#   as bad/missing values.
#
#   nanvals
I5  INDEF, NAN, NaN

# Trim frame?
#
# * name: [str]
#   Name of the cluster that should be trimmed.
# * range: [floats] * 4
#   Input the x,y ranges in the order: xmin, xmax, ymin, ymax
#
#    name    range
I6      n    0. 0. 0. 0.
################################################################################



####################### Structural functions ###################################

# Structural analysis parameters. Use 'a' for automatic estimation. If no
# values are set for a given cluster, values from the 'CLUSTER' entry will be
# used.
#
# * name         : [str]
#   Cluster's name (must match the name of the input data file)
# * c_x / c_y    : [float / a]
#   Cluster's center in pixels or degrees.
# * field_dens   : [float>0. / a]
#   Field (background+foreground) density.
# * clust_radius : [float>0. / a / max]
#   Cluster's radius.
#   - a: selects the 'optimal' value (maximizes the ratio between
#     cluster members and stars within rings of increasing radii)
#   - max: uses a radius large enough to include all stars in the frame.
# * f_regs       : [int>0 / a]
#   Number of field regions to define around the cluster (used by the
#   decontamination algorithm).
#
#   name       c_x      c_y      field_dens   clust_radius     f_regs
S0  CLUSTER      a        a               a           max          a

#S0 arpm2           a        a        a     0.05      a
#S0 ber26           a        a        a     0.027     a
#S0 ber29           a        a        a     0.05     a
#S0 ber56           a        a        a     0.075     a
#S0 ber76           a        a        a     0.067     a
#S0 eso09308        a        a        a     0.025     a
#S0 saurer1         a        a        a     0.033      a
#S0 tombaugh2       a        a        a     0.058    a
#S0 vdbh4           a        a        a     0.033      a
#S0 vdbh176         a        a        a     0.033     a
#S0 vdbh144         a        a        a     0.025     a
#S0 ber25           a        a        a     0.083     a
#S0 ber73           a        a        a     0.033     a
#S0 ber75           a        a        a     0.033     a
#S0 ber102          a        a        a     0.042     a
#S0 czernik30       a        a        a     0.042     a
#S0 eso09205        a        a        a     0.05      a
#S0 eso09218        a        a        a     0.05      a
#S0 fsr1212         a        a        a     0.05      a
#S0 fsr1419         a        a        a     0.05      a
#S0 kronberger31    a        a        a     0.033     a
#S0 kronberger39    a        a        a     0.033     a
#S0 saurer3         a        a        a     0.033     a
#S0 saurer6         a        a        a     0.033     a
#S0 vdbh37          a        a        a     0.033      a


# King profile fitting parameters.
#
# * ndim: [0 / 2 / 4]
#   Number of dimensions to fit: '0' means skip the process (no fit), '2' means
#   fit (rc, rt), '4' means fit (rc, rt, ecc, theta)
# * nchains: [int]
#   Number of MCMC chains used in the Bayesian analysis.
# * nruns: [int]
#   Number of MCMC steps used in the Bayesian analysis.
# * nburn: [0.<float<1.]
#   Percentage of chains to throw away as burn-in.
# * rt_max: [0.<float]
#   Factor that determines the maximum value of the tidal radius, compared to
#   the radius obtained in the previous step.
# * moves: [str]
#   Single or multiple strings (if multiple, separated by ;) determining the
#   'moves' used by the 'emcee' package.
#
#   ndim   nchains   nruns  nburn    rt_max
S1     0        20    5000    .5        4
#
#   moves
S2  DESnookerMove(), 0.1; DEMove(), 0.9 * 0.9; DEMove(gamma0=1.0), 0.9 * 0.1
#S2  StretchMove()
################################################################################



################## Photometric + kinematic uncertainties #######################

# Error rejection.
#
# * e_mag_max: [float / max]
#   Maximum error value a star can have in its magnitude without being
#   rejected. Use 'max' for no maximum limit.
# * e_col_max: [float / max]
#   Maximum error value a star can have in its color(s) without being rejected.
# * e_plx_max / e_pm_max / e_rv_max: [float / max]
#   Idem for parallax / proper motions / radial velocity values. Use 'max' if
#   any of these data columns are not present (or no maximum limit is desired)
#
#   e_mag_max   e_col_max    e_plx_max     e_pm_max     e_rv_max
E0        max        max         max         max         max
################################################################################



####################### Decontamination algorithm ##############################

# Assign membership probabilities (MPs) to stars within the cluster region.
#
# * flag: [y / n / read]
#   - y: apply the Bayesian decontamination algorithm (DA).
#   - n: no DA applied, all stars are assigned MP=1.
#   - read: read MPs from an existing file.
# * runs: [integer>=2]
#   The Bayesian DA will iterate a maximum of 'runs' times or until the MPs
#   converge to within 0.1% values. Minimum value is 2.
#  * w_xxx: [y / n]
#   Turn data dimensions used by the DA on/off (y/n). If more than one color
#   is defined, add more values below 'w_col'.
#
#   flag   runs   w_mag    w_col    w_Plx    w_PMx    w_PMy    w_RV
D0    n     10      n         n      n        y        y       n
################################################################################



########################## Field stars removal #################################

# Cluster region field stars removal.
#
# Performs a selection of stars within the cluster region, to be used by the
# synthetic cluster match function. Possible field stars are removed either
# based on their assigned MPs, or randomly (if MPs are missing).
#
# * mode: [local / n_memb / mp_05 / top_h / man / all]
#   - local: combines the assigned MPs with a cell by cell removal of stars in
#     the photometric diagram. The stars discarded are those of lower MPs and
#     the number is equal to the excess of field stars present in each cell.
#   - n_memb: use the N stars with the highest MPs, where N is the approximate
#     number of members found via the cluster region vs field region star
#     density comparison.
#   - mp_05: selects only those stars with MP>=0.5, i.e.: stars with higher
#     probability of being a cluster member than a field star.
#   - top_h: selects the top half of all stars in the cluster region with the
#     highest MPs.
#   - man: the minimum accepted probability value has to be set manually in the
#    'prob_min' parameter (0, 1).
#   - all: use all stars in the cluster region.
# * binning: [optm / fixed / blocks / blocks-max / auto / fd / doane / scott /
#             rice / sqrt / sturges / knuth]
#   Binning method to be used if the 'local' method is selected. Otherwise
#   this parameter is ignored.
#   - optm: select the number of bins so that the number of stars left is
#     as close to the estimated number of members as possible. The number of
#     bins in the magnitude is twice the number used in the colors.
#   - fixed: Based on Bonatto & Bica (2007; 377, 3, 1301-1323) but using larger
#     values: 0.5 mag for colors and 1. mag for the magnitude.
#   - blocks / knuth: astropy's implementation.
#   - blocks-max: same as 'blocks' but imposing a maximum width of 3. mag for
#     colors and 1. mag for magnitude.
#   - rest: numpy's implementation.
# * prob_min: [0<float<1]
#   Minimum accepted probability value if the 'man' mode was selected.
#
#   mode    binning     prob_min
F0  all      optm          0.99
################################################################################



###################### Parallax Bayesian analysis ##############################

#
# * plx_bayes_flag: [y / n]
#   Bayesian analysis of parallax data.
# * offset: [float]
#   Offset added to the parallax data.
# * nchains: [int]
#   Number of MCMC chains used in the Bayesian analysis.
# * nruns: [int]
#   Number of MCMC steps used in the Bayesian analysis.
# * nburn: [0.<float<1.]
#   Percentage of chains to throw away as burn-in.
#
#   plx_flag   offset   nchains   nruns   nburn
P0         n   0.0        10      500     .5
################################################################################



######################## Synthetic clusters generation #########################

# * ran_seed: [int / n]
#   Random seed used in the generation of synthetic clusters. If 'n', an integer
#   will be randomly selected.
# * IMF: [str]
#   IMF used to populate the synthetic clusters.
#   - kroupa_2002      : Kroupa (2002) 295.82K, Eq. (2) & (3)
#   - chabrier_2001_exp: Chabrier (2001) 554.1274C, Eq (8)
#   - chabrier_2001_log: Chabrier (2001) 554.1274C, Eq (7)
#   - kroupa_1993      : Kroupa et al. (1993) 262.545K, Eq. (13)
#   - salpeter_1955    : Salpeter (1955)
# * min_mass_ratio: [0<float<=1]
#   Minimum mass ratio for the uniform distribution probabilities of the
#   binary mass ratio (q=m2/m1).
# * max_mag: ['max' / float]
#   Maximum magnitude cut to be used in the best fit process. This
#   limit affects both the observed and synthetic cluster.
#   - max: use the maximum observed magnitude (i.e.: no cut is applied).
#   - [float]: manually select the maximum magnitude value to use.
# * N_interp: [int]
#   Number of interpolation points used in the isochrones. Usually best left
#   alone.
#
#   ran_seed            IMF   min_mass_ratio   max_mag  N_interp
R0         n    kroupa_2002           0.7        max        2000

# * name     : [str]
#   Cluster's name (must match the name of the input data file)
# * z        : [float / str]
#   Metallicity
# * log(age) : [float / str]
#   Logarithmic age
# * E_BV     : [0<float]
#   Extinction)
# * d_m      : [0<float]
#   Distance modulus
#   M        : [0<float]
#   Mass (in solar masses)
# * b_fr     : [0<float<1]
#   Binary fraction
# * Rv       : [float]
#   Ratio of total to selective absorption (single value)
#
#   For the [z, log(age)] parameters the strings 'min' and/or 'max' can be used
#   to let ASteCA decide the minimum and/or maximum range limits. A single
#   value can be used to indicate a fixed parameter.
#
#      name       z     log(age)  E_BV   d_m       M       b_fr     Rv
R1  CLUSTER    min/max    min/max   0/1   14/20     100/200000    0/1   3.1
R1   vdbh176       min/max   8/max      0/.7    14/20 100/200000  0/1   3.1
R1  ngc2516_pang   0.0151     7.9/8.1      0/.5    7.9/8.1     100/10000    0/1   3.1
R1  alphaPersei   0.0151     7.6/8.4    0/.5    4./7.     100/5000    0/1   3.1
R1  ngc3532    0.0151     8.4/8.8    0/.5    8./9.     100/10000    0.5/1   3.1
################################################################################



#################### Best fit algorithm parameters #############################

# Algorithm used to explore the parameter space given a likelihood.
#
# * algorithm: ptemcee / n
#
#   - ptemcee: Parallel tempering Bayesian MCMC algorithm.
#   - read   : Read pickle file generated with the 'save_trace' option. The
#              file must exist in the 'input' folder.
#   - n      : No fundamental parameters estimation will be attempted on the
#              observed cluster. All the parameters below are ignored.
#
# * mins_max: [float]
#   Maximum number of minutes the process is allowed to run.
# * save_trace: [y / n]
#   Save MCMC trace to file?
#
#   algorithm   mins_max  save_trace
B0    ptemcee       120          y

# ptemcee parameters.
#
# * nsteps: [int]
#   Number of steps used.
# * nwalkers: [int]
#   Number of walkers/chains used.
# * nburn: [0<float<1]
#   Percentage of the chain discarded as burn-in.
# * ntemps: [int]
#   Number of parallel temperatures.
# * Tmax: [float / inf / n]
#   Maximum temperature value.
# * adapt: [y / n]
#   Turn on-off the adaptive (dynamic) temperature selection.
#
#   nsteps   nwalkers   nburn   ntemps   Tmax   adapt
B1  10000         20     .25       20     20       y

# Priors
#
# * prior: [u / g]
#   Prior distributions for the fitted parameters.
#   - u: uniform distribution
#   - g: Gaussian distribution
#
# The 'g' option needs the extra parameters 'mean/stddev'. In this case the
# proper format is for example 'g/8/0.2', for a mean value of 8 and a standard
# deviation of 0.2.
#
#      name      z    log(age)    E_BV    d_m      M    b_fr
B2  CLUSTER      u           u       u      u      u      u

# Likelihood.
#
# The likelihood function is the 'Poisson likelihood ratio' defined in
# Tremmel et al. (2013); Eq. 10 (with v_{i,j}=1).
#
# * binning: fixed / manual / blocks / blocks-max / auto / fd / doane / scott /
#            rice / sqrt / sturges / knuth
#   Binning method applied on the photometric space.
#
# * N_bins: [int]
#   Number of bins for each photometric dimension if the 'manual' binning mode
#   is selected. The order is: 'N_bin_mag N_bin_color' (add another
#   'N_bin_color' if two colors are employed).
#
#    binning    N_bins
B3     knuth     5 10
################################################################################



############################## Output ##########################################

# Create output figures?
#
# * blocks: [A1, A2, A3, B1, B2, C1, C2, C3, D1, D2, D3]
#   Select one or more identifier to decide which plots will be produced. Leave
#   empty for no output plots. An 's' character after an identifier will make
#   the code stop and return right after creating that plot. I.e.: the line
#   'A1 B1 s B2 C1' will make the code create the 'A1' and 'B1' plots and stop
#   right after 'B1'. If we use 'A1 B1 B2 C1' then those four plots will be
#   generated and the code will keep running until the end.
#
#   - A1: structural density maps
#   - A2: center and field density analysis
#   - A3: radius analysis
#   - B1: uncertainties analysis
#   - B2: photometric data analysis
#   - C1: decontamination algorithm photometric diagrams
#   - C2: parallax analysis
#   - C3: proper motions analysis
#   - D1: convergence diagnostics
#   - D2: corner plot for the fundamental parameters
#   - D3: best fit synthetic cluster found
#
#   blocks
O0   D1 D2 D3

# * plot_style: [asteca / any style supported by matplotlib]
#   To display a list of supported styles, use:
#   > import matplotlib.pyplot as plt;print(plt.style.available)
#   You can use your own 'matplotlibrc' file storing it in the top folder.
#   Any parameter in that file will overwrite the parameters in the selected
#   style below.
# * D3_sol: [mean / median / mode / map]
#   The solution (isochrone + synthetic cluster) to plot in the D3 image.
#
#   plot_style    D3_sol
O1     asteca        median
################################################################################
